// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PaulBot.Data;

#nullable disable

namespace PaulBot.Migrations
{
    [DbContext(typeof(PaulBotDbContext))]
    [Migration("20220218211706_SelfAssignableRoles")]
    partial class SelfAssignableRoles
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("PaulBot.Discord.Roles.Models.SelfAssignableRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("RoleId")
                        .HasColumnType("numeric(20,0)")
                        .HasColumnName("role_id");

                    b.Property<int>("RoleMenuId")
                        .HasColumnType("integer")
                        .HasColumnName("role_menu_id");

                    b.HasKey("Id")
                        .HasName("pk_self_roles");

                    b.HasIndex("RoleMenuId")
                        .HasDatabaseName("ix_self_roles_role_menu_id");

                    b.ToTable("self_roles", (string)null);
                });

            modelBuilder.Entity("PaulBot.Discord.Roles.Models.SelfAssignableRolesMenu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("ChannelId")
                        .HasColumnType("numeric(20,0)")
                        .HasColumnName("channel_id");

                    b.Property<decimal>("MessageId")
                        .HasColumnType("numeric(20,0)")
                        .HasColumnName("message_id");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("title");

                    b.HasKey("Id")
                        .HasName("pk_self_role_menus");

                    b.ToTable("self_role_menus", (string)null);
                });

            modelBuilder.Entity("PaulBot.Discord.Subjects.Models.Subject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("ChannelId")
                        .HasColumnType("numeric(20,0)")
                        .HasColumnName("channel_id");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("code");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<decimal>("RoleId")
                        .HasColumnType("numeric(20,0)")
                        .HasColumnName("role_id");

                    b.HasKey("Id")
                        .HasName("pk_subjects");

                    b.ToTable("subjects", (string)null);
                });

            modelBuilder.Entity("PaulBot.Discord.Verification.Models.MemberVerification", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("AzureId")
                        .HasColumnType("text")
                        .HasColumnName("azure_id");

                    b.Property<bool>("IsRevoked")
                        .HasColumnType("boolean")
                        .HasColumnName("is_revoked");

                    b.Property<decimal>("MemberId")
                        .HasColumnType("numeric(20,0)")
                        .HasColumnName("member_id");

                    b.HasKey("Id")
                        .HasName("pk_verifications");

                    b.HasIndex("MemberId")
                        .IsUnique()
                        .HasDatabaseName("ix_verifications_member_id");

                    b.ToTable("verifications", (string)null);
                });

            modelBuilder.Entity("PaulBot.Discord.Roles.Models.SelfAssignableRole", b =>
                {
                    b.HasOne("PaulBot.Discord.Roles.Models.SelfAssignableRolesMenu", "Menu")
                        .WithMany("Roles")
                        .HasForeignKey("RoleMenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_self_roles_self_role_menus_menu_id");

                    b.Navigation("Menu");
                });

            modelBuilder.Entity("PaulBot.Discord.Roles.Models.SelfAssignableRolesMenu", b =>
                {
                    b.Navigation("Roles");
                });
#pragma warning restore 612, 618
        }
    }
}
